{
  "/oauth": {
    "post": {
      "tags": [
        "oauth"
      ],
      "summary": "Authentication",
      "description": "Get authentication token using user credential",
      "operationId": "authentication",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "credantional",
          "description": "user credential",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          }
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "put": {
      "tags": [
        "oauth"
      ],
      "summary": "Authentication refresh",
      "description": "Get authentication token using refresh token",
      "operationId": "authentication-refresh",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "refresh-token",
          "description": "user credential",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              }
            }
          }
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "delete": {
      "tags": [
        "oauth"
      ],
      "summary": "Sign out",
      "description": "Destroy authentication token",
      "operationId": "sign-out",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "Authentication",
          "in": "header",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Avery request must be success"
        }
      }
    }
  },
  "/oauth/confirmation": {
    "get": {
      "tags": [
        "oauth"
      ],
      "summary": "Email confirmation",
      "description": "Confirm user credantion within the system",
      "operationId": "confiramation",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "token",
          "in": "query",
          "description": "The confirmation token from email. ",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    }
  },
  "/oauth/password": {
    "post": {
      "tags": [
        "oauth"
      ],
      "summary": "Change password",
      "description": "Change user password using old user password",
      "operationId": "change-password",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "Authorization",
          "schema": {
            "$ref": "#/definitions/Authentication"
          }
        },
        {
          "in": "body",
          "name": "passwords",
          "description": "The confirmation token from email. ",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "oldPassword": {
                "type": "string"
              },
              "newPassword": {
                "type": "string"
              }
            }
          }
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    }
  },
  "/oauth/password/{variable}": {
    "get": {
      "tags": [
        "oauth"
      ],
      "summary": "Send email",
      "description": "Send email to the user to refresh password",
      "operationId": "forgot-password-email",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "variable",
          "in": "path",
          "description": "User email. ",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "put": {
      "tags": [
        "oauth"
      ],
      "summary": "Valdate token",
      "description": "Validation forgot password token",
      "operationId": "forgot-password-validate",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "variable",
          "in": "path",
          "description": "The confirmation token from email. ",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "post": {
      "tags": [
        "oauth"
      ],
      "summary": "Change password",
      "description": "Change password using forgot password token",
      "operationId": "forgot-password-change",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "variable",
          "in": "path",
          "description": "The confirmation token from email. ",
          "required": true,
          "type": "string"
        },
        {
          "in": "query",
          "name": "password",
          "description": "New password",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    }
  },
  "/user/self": {
    "get": {
      "tags": [
        "User"
      ],
      "summary": "Get user",
      "description": "Get curent loged user.",
      "operationId": "get-self",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "Authorization",
          "schema": {
            "$ref": "#/definitions/Authentication"
          }
        }
      ],
      "responses": {
        "200": {
          "$ref": "#/definitions/UserDto"
        },
        "401": {
          "description": "Unauthorized"
        },
        "405": {
          "description": "Invalid input"
        }
      }
    }
  },
  "/user": {
    "post": {
      "tags": [
        "User"
      ],
      "summary": "Create new user",
      "description": "Create new user.",
      "operationId": "create-user",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "Authorization",
          "schema": {
            "$ref": "#/definitions/Authentication"
          }
        },
        {
          "in": "body",
          "name": "user",
          "description": "Created user object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UserDto"
          }
        }
      ],
      "responses": {
        "200": {
          "$ref": "#/definitions/UserDto"
        },
        "401": {
          "description": "Unauthorized"
        },
        "405": {
          "description": "Invalid input"
        }
      }
    }
  },
  "/user/{id}": {
    "get": {
      "tags": [
        "User"
      ],
      "summary": "Get user",
      "description": "get user by id.",
      "operationId": "get-user",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "Authorization",
          "schema": {
            "$ref": "#/definitions/Authentication"
          }
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "$ref": "#/definitions/UserDto"
        },
        "401": {
          "description": "Unauthorized"
        },
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "put": {
      "tags": [
        "User"
      ],
      "summary": "Update user",
      "description": "Update user.",
      "operationId": "updatet-user",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "Authorization",
          "schema": {
            "$ref": "#/definitions/Authentication"
          }
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "body",
          "name": "user",
          "description": "Created user object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UserDto"
          }
        }
      ],
      "responses": {
        "200": {
          "$ref": "#/definitions/UserDto"
        },
        "401": {
          "description": "Unauthorized"
        },
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "delete": {
      "tags": [
        "User"
      ],
      "summary": "Delete user",
      "description": "Delete user by id.",
      "operationId": "delete-user",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "Authorization",
          "schema": {
            "$ref": "#/definitions/Authentication"
          }
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation"
        },
        "401": {
          "description": "Unauthorized"
        },
        "405": {
          "description": "Invalid input"
        }
      }
    }
  },
  "/user/list-filter": {
    "post": {
      "tags": [
        "User"
      ],
      "summary": "Get user filtered list",
      "description": "Get filtered user list with short information about items.",
      "operationId": "filtered-user-list",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "Authorization",
          "schema": {
            "$ref": "#/definitions/Authentication"
          }
        },
        {
          "in": "query",
          "name": "page",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "in": "query",
          "name": "size",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "in": "query",
          "name": "sort",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "filter",
          "description": "Filter object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Filter"
          }
        }
      ],
      "responses": {
        "200": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/UserDto"
                }
              },
              "size": {
                "type": "integer",
                "format": "int64"
              },
              "page": {
                "type": "integer",
                "format": "int64"
              },
              "totalElements": {
                "type": "integer",
                "format": "int64"
              },
              "totalPages": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "405": {
          "description": "Invalid input"
        }
      }
    }
  },
  "/user/list-filter/short": {
    "post": {
      "tags": [
        "User"
      ],
      "summary": "Get user filtered list",
      "description": "Get filtered user list with full information about items.",
      "operationId": "filtered-user-list-short",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "Authorization",
          "schema": {
            "$ref": "#/definitions/Authentication"
          }
        },
        {
          "in": "query",
          "name": "page",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "in": "query",
          "name": "size",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "in": "query",
          "name": "sort",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "filter",
          "description": "Filter object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Filter"
          }
        }
      ],
      "responses": {
        "200": {
          "schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/UserShortDto"
                }
              },
              "size": {
                "type": "integer",
                "format": "int64"
              },
              "page": {
                "type": "integer",
                "format": "int64"
              },
              "totalElements": {
                "type": "integer",
                "format": "int64"
              },
              "totalPages": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "405": {
          "description": "Invalid input"
        }
      }
    }
  }
}